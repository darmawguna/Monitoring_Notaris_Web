name: Deploy to VPS (Caddy host)

on:
  workflow_run:
    workflows: ["Build & Push Image (Docker Hub)"]
    types: ["completed"]
    branches: ["main"]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            set -e
            cd /home/ubuntu/projectdarma/docuhub

            echo "===> Update source code"
            git fetch --all
            git reset --hard origin/main

            echo "===> Pull image terbaru & naikkan stack"
            docker compose pull
            docker compose up -d

            echo "===> Install vendor di dalam container app (punya ext-intl)"
            docker compose exec -T app composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

            echo "===> Build aset frontend (Node Debian/glibc + clean install)"
            docker run --rm -v "$PWD":/app -w /app \
              node:20-bookworm bash -lc '
                set -e
                echo "Node: $(node --version) | npm: $(npm --version)"
                rm -rf node_modules package-lock.json
                npm cache clean --force
                npm install --include=optional
                # Jika masih gagal karena Rollup native, aktifkan fallback JS:
                # export ROLLUP_SKIP_NODEJS=true
                npm run build
              '

            echo "===> Artisan commands"
            # Jika pertama kali & APP_KEY belum ada, perintah berikut hanya menampilkan key
            docker compose exec -T app php artisan key:generate --show || true

            docker compose exec -T app php artisan optimize:clear
            docker compose exec -T app php artisan migrate --force
            docker compose exec -T app php artisan storage:link || true

            echo "===> Reload Caddy host & cleanup"
            sudo systemctl reload caddy || true
            docker image prune -f

            echo "===> Deploy selesai"
