name: Deploy to VPS

on:
  workflow_run:
    workflows: ["Build & Push Image (Docker Hub)"]
    types: [completed]
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Get short SHA from triggering workflow
        id: get_sha
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
          else
            echo "sha_short=$(echo ${{ github.event.workflow_run.head_sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          port: 2607
          script: |
            set -e
            
            PROJECT_DIR="/home/projectdarma/Monitoring_Notaris_Web"
            
            echo "📂 Navigating to project directory..."
            cd "$PROJECT_DIR"

            echo "🔄 Pulling latest configuration from repository..."
            git fetch origin
            git reset --hard origin/main

            echo "🏷️  Setting image tag to: ${{ steps.get_sha.outputs.sha_short }}"
            echo "IMAGE_TAG=${{ steps.get_sha.outputs.sha_short }}" > .env.image

            echo "📦 Pulling latest Docker image from Docker Hub..."
            docker compose --env-file .env.image pull app queue schedule

            echo "⏹️  Stopping current services gracefully..."
            docker compose down --remove-orphans

            echo "🚀 Starting services with new image..."
            docker compose --env-file .env.image up -d

            echo "⏳ Waiting for application to be healthy..."
            timeout 120 bash -c 'until docker compose exec -T app php artisan --version > /dev/null 2>&1; do sleep 2; done' || {
              echo "❌ Application failed to start properly"
              docker compose logs --tail=50
              exit 1
            }

            echo "🔧 Running database migrations..."
            docker compose exec -T app php artisan migrate --force

            echo "🗃️  Seeding database (if needed)..."
            docker compose exec -T app php artisan db:seed --force || true

            echo "🧹 Clearing and optimizing caches..."
            docker compose exec -T app php artisan optimize:clear
            docker compose exec -T app php artisan config:cache
            docker compose exec -T app php artisan route:cache
            docker compose exec -T app php artisan view:cache

            echo "🔗 Ensuring storage link..."
            docker compose exec -T app php artisan storage:link || true

            echo "📊 Checking service health..."
            docker compose ps
            
            echo "🔁 Reloading Caddy web server..."
            sudo systemctl reload caddy || echo "⚠️  Caddy reload skipped (not critical)"

            echo "✅ Deployment completed successfully!"
            echo "🎉 Image tag deployed: ${{ steps.get_sha.outputs.sha_short }}"

      - name: Deployment notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful"
          else
            echo "❌ Deployment failed"
          fi
