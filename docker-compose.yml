version: "3.9"

services:
  app:
    image: docker.io/darmawiguna/docuhub:latest
    container_name: docuhub_app
    restart: unless-stopped
    ports:
      - "127.0.0.1:9000:9000"   # php-fpm
    env_file:
      - .env
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
      LOG_CHANNEL: stderr
    volumes:
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs
    networks:
      - docuhub_network
    depends_on:
      db:
        condition: service_healthy
    # healthcheck sudah ada di Dockerfile (pgrep php-fpm)

  queue:
    image: docker.io/darmawiguna/docuhub:latest
    container_name: docuhub_queue
    restart: unless-stopped
    env_file:
      - .env
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
      LOG_CHANNEL: stderr
    depends_on:
      db:
        condition: service_healthy
    networks:
      - docuhub_network
    volumes:
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs

    # Penting: jalankan dari folder yang ada artisan
    working_dir: /var/www/html

    # Array form â€” tidak lewat shell
    command:
      - php
      - artisan
      - queue:work
      - --queue=default
      - --sleep=3
      - --tries=3
      - --backoff=5
      - --timeout=120
      - --memory=256

    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'artisan queue:work' >/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s


  db:
    image: mysql:8.0
    container_name: docuhub_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_INITDB_SKIP_TZINFO: 1
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
    ports:
      - "127.0.0.1:3309:3306"
    networks:
      - docuhub_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-p${DB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

networks:
  docuhub_network:
    driver: bridge

volumes:
  db_data:
    driver: local
