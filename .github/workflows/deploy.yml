name: Deploy to VPS

on:
  workflow_run:
    workflows: ["Build & Push Image (Docker Hub)"]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      # --- PERBAIKAN DI SINI: Langkah baru untuk mendapatkan SHA pendek ---
      - name: Get short SHA from triggering workflow
        id: get_sha
        run: echo "sha_short=$(echo ${{ github.event.workflow_run.head_sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          port: 2607
          script: |
            set -e
            PROJECT_DIR="/home/projectdarma/Monitoring_Notaris_Web"
            cd "$PROJECT_DIR"

            echo "🔄 Menarik kode terbaru..."
            git fetch origin
            git reset --hard origin/main

            # Gunakan output dari langkah 'get_sha' di atas
            echo "IMAGE_TAG=${{ steps.get_sha.outputs.sha_short }}" > .env.compose

            echo "📦 Pull image Docker terbaru dengan nomor seri yang benar..."
            docker compose --env-file .env --env-file .env.compose pull

            echo "⏹️ Menghentikan layanan yang sedang berjalan..."
            docker compose --env-file .env --env-file .env.compose down --remove-orphans

            echo "🚀 Menjalankan ulang semua layanan..."
            docker compose --env-file .env --env-file .env.compose up -d

            echo "⏳ Menunggu database siap..."
            sleep 15

            echo "🔧 Menjalankan migrasi database..."
            docker compose --env-file .env --env-file .env.compose exec -T app php artisan migrate --force

            echo "🧹 Membersihkan cache aplikasi..."
            docker compose --env-file .env --env-file .env.compose exec -T app php artisan optimize:clear

            echo "🔁 Memuat ulang Caddy..."
            sudo systemctl reload caddy

            echo "✅ Deploy berhasil!"