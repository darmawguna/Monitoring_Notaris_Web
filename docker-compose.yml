services:
  # ======================
  # MySQL
  # ======================
  db:
    image: mysql:8.0
    container_name: docuhub_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-docuhub}
      MYSQL_USER: ${DB_USERNAME:-docuhub_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootsecret}
      MYSQL_INITDB_SKIP_TZINFO: 1
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "127.0.0.1:3309:3306"
    networks: [docuhub_network]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-p${DB_ROOT_PASSWORD:-rootsecret}"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 30s

  # ======================
  # PHP-FPM (Laravel) - MENGGUNAKAN IMAGE DARI DOCKER HUB
  # ======================
  app:
    image: darmawiguna/docuhub:${IMAGE_TAG:-latest}
    container_name: docuhub_app
    restart: unless-stopped
    env_file: [.env]
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
      LOG_CHANNEL: stderr
      DB_HOST: db
      DB_PORT: 3306
    volumes:
      # Mount persistent storage ONLY
      - storage_data:/var/www/html/storage
      # Mount PHP config (optional)
      - ./docker/php/zz-fpm.conf:/usr/local/etc/php-fpm.d/zz-fpm.conf:ro
      - ./docker/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro
    expose:
      - "9000"
    depends_on:
      db:
        condition: service_healthy
    networks: [docuhub_network]
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ======================
  # Nginx
  # ======================
  web:
    image: nginx:1.27-alpine
    container_name: docuhub_web
    restart: unless-stopped
    depends_on:
      app:
        condition: service_healthy
    volumes:
      # Mount nginx config
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      # Share storage untuk public files (read-only)
      - storage_data:/var/www/html/storage:ro
      # Share public directory dari app container (untuk static assets)
      - app_public:/var/www/html/public:ro
    ports:
      - "127.0.0.1:9002:8080"
    networks: [docuhub_network]
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ======================
  # Queue worker - MENGGUNAKAN IMAGE DARI DOCKER HUB
  # ======================
  queue:
    image: darmawiguna/docuhub:${IMAGE_TAG:-latest}
    container_name: docuhub_queue
    restart: unless-stopped
    env_file: [.env]
    environment:
      APP_ENV: production
      DB_HOST: db
      DB_PORT: 3306
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_healthy
    networks: [docuhub_network]
    volumes:
      - storage_data:/var/www/html/storage
    command: php artisan queue:work --sleep=3 --tries=3 --max-jobs=1000 --max-time=3600 --memory=256
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep 'queue:work' || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3

  # ======================
  # Scheduler - MENGGUNAKAN IMAGE DARI DOCKER HUB
  # ======================
  schedule:
    image: darmawiguna/docuhub:${IMAGE_TAG:-latest}
    container_name: docuhub_schedule
    restart: unless-stopped
    env_file: [.env]
    environment:
      APP_ENV: production
      DB_HOST: db
      DB_PORT: 3306
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_healthy
    networks: [docuhub_network]
    volumes:
      - storage_data:/var/www/html/storage
    command: >
      sh -c "while true; do
        php artisan schedule:run --verbose --no-interaction;
        sleep 60;
      done"
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep 'schedule:run' || exit 1"]
      interval: 120s
      timeout: 10s
      retries: 3

networks:
  docuhub_network:
    driver: bridge

volumes:
  db_data:
    driver: local
  storage_data:
    driver: local
  app_public:
    driver: local